<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-N6JLWRHB89"></script>
    <script>
      window.dataLayer = window.dataLayer || []
      function gtag() {
        dataLayer.push(arguments)
      }
      gtag('js', new Date())

      gtag('config', 'G-N6JLWRHB89')
    </script>
    <!-- Google tag end -->

    <title>
      SweetAlert2 - a beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup
      boxes
    </title>
    <meta
      name="description"
      content="A beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes"
    />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content="SweetAlert2" />
    <meta
      property="og:description"
      content="A beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes"
    />
    <meta property="og:image" content="http://sweetalert2.github.io/images/sweetalert2-social.png" />
    <meta property="og:url" content="https://sweetalert2.github.io/" />

    <!-- Twitter -->
    <meta name="twitter:title" content="SweetAlert2" />
    <meta
      name="twitter:description"
      content="A beautiful, responsive, customizable and accessible (WAI-ARIA) replacement for JavaScript's popup boxes"
    />
    <meta name="twitter:image" content="https://sweetalert2.github.io/images/sweetalert2-social.png" />
    <meta name="twitter:card" content="summary_large_image" />

    <link rel="icon" href="/images/favicon.png" />

    <link rel="preload" href="https://unsplash.it/400/200" as="image" />
    <link rel="preload" href="https://placeholder.pics/svg/300x1500" as="image" />

    <!-- https://goo.gl/qRE0vM -->
    <meta name="theme-color" content="#f2f4f6" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
      id="theme-styles"
    />

    <link rel="stylesheet" href="/styles/styles.css" />

    <!-- Google AdSense -->
    <script
      async
      src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9272419886924637"
      crossorigin="anonymous"
    ></script>
  </head>

  <body>
    <!-- GitHub stars -->
    <iframe
      src="https://ghbtns.com/github-btn.html?user=sweetalert2&repo=sweetalert2&type=star&count=true&size=large"
      frameborder="0"
      scrolling="0"
      width="170"
      height="30"
      title="GitHub stars"
      class="mobile-hidden"
    ></iframe>

    <nav class="mobile-hidden">
      <a href="/#examples"><span>Examples</span></a>
      <a href="/recipe-gallery" class="recipe-gallery"><span>Recipe Gallery</span></a>
      <a href="/#download"><span>Installation</span></a>
      <a href="/#usage"><span>Usage</span></a>
      <a href="/#frameworks-integrations"><span>Integrations</span></a>
      <a href="/#configuration" class="mobile-hidden"><span>Configuration</span></a>
      <a href="/#declarative-templates" class="mobile-hidden"><span>Declarative templates</span></a>
      <a href="/#handling-buttons"><span>Handling Buttons</span></a>
      <a href="/#handling-dismissals"><span>Dismissals</span></a>
      <a href="/#icons"><span>Icons</span></a>
      <a href="/#input-types"><span>Input Types</span></a>
      <a href="/#methods" class="mobile-hidden"><span>Methods</span></a>
      <a href="/#themes"><span>Themes</span></a>
      <a href="/#sponsors"><span>Sponsors</span></a>
      <a href="/#nsfw-sponsors"><span>NSFW Sponsors</span></a>

      <div class="theme-selector">
        <label
          >Theme:
          <select id="theme" autocomplete="off">
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-default/default.css" selected>
              Default
            </option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark/dark.css">Dark</option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-bootstrap-4/bootstrap-4.css">
              Bootstrap 4
            </option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-bulma/bulma.css">Bulma</option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-minimal/minimal.css">Minimal</option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-borderless/borderless.css">
              Borderless
            </option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-material-ui/material-ui.css">
              Material UI
            </option>
            <option value="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-wordpress-admin/wordpress-admin.css">
              WordPress Admin
            </option>
          </select></label
        >
      </div>

      <div class="version-selector mobile-hidden">
        <label
          >Version:
          <select id="version">
            <option value="11.x" selected>v11.x</option>
            <option value="10.x">v10.x</option>
            <option value="9.x">v9.x</option>
          </select></label
        >
      </div>
    </nav>

    <div id="show-sidebar">
      <i class="fa fa-bars" aria-hidden="true"></i>
    </div>

    <header>
      <div id="slava-ukraini"><a href="https://war.ukraine.ua/support-ukraine/">SAVE LIVES, SUPPORT UKRAINE</a> 🇺🇦</div>
      <div id="logo-slider">
        <div id="logo-track">
          <img src="./images/logo-donut-track.svg" />
        </div>
        <div id="logo-bouncer">
          <div id="logo-spinner">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="15.4 -120.3 269.3 269.3">
              <style>
                .st4 {
                  fill: #fa7471;
                }
                .st5 {
                  fill: #a575b7;
                }
                .st6 {
                  stroke-width: 8.2;
                  stroke: #8a3d9b;
                  fill: none;
                  stroke-miterlimit: 10;
                }
                .st7 {
                  fill: #8a3d9b;
                }
              </style>
              <circle id="lower_circle" cx="161.8" cy="27" r="100.2" fill="#fdcc80"></circle>
              <circle id="inner_circle" cx="149.4" cy="14.2" r="36.8" fill="#fff"></circle>
              <path
                id="upper_frosting"
                d="M108.7 105.5c-6.6.3-31.9-13.4-42.4-49.5-1.9-6.6-4.5-16.8-4.5-29.6 0-55 44.6-99.6 99.6-99.6 13.1 0 23.5 2.7 29.6 4.5 34.4 10.4 48 34.1 44.9 40.5s-10.6-3.4-22.9-2.5c-1.4.1-4.2 4-4.2 6.2 0 7.2 13.5 12.7 14.6 15.9 1.7 5 3.4 6.2 2.3 9.5-1.5 4.8-2.9 3.6-5.2 5.9-.9.9-5.6.7-16.6-1.7-5.9-1.3-18-11.2-18-11.4 0-.4-16.2-13.3-30.2-14.8-6.6-.7-28.1-2.8-39.2 19.2-.5 1.1-4.4 20-4.2 22.5.9 11.9 7 24.7 12.1 27.5 11.7 6.4 12.9 14.7 12.8 14.4-.1-.4 7.8 14.7 8.2 17.3.3 2.1-.8 7.4-3.7 8.7-3.5 1.5-7.7-1.7-8.4-2.1-.8-.5-10.7-16.3-19.5-13.1-.8.3-6 3.7-7.6 5-.3.2 4.8 15.4 5.6 18.5.5 1.8-2.3 8.7-3.1 8.7z"
                opacity=".5"
                fill="#fa7471"
              ></path>
              <g id="sprinkles">
                <path
                  class="st4"
                  d="M135.1-69.3h-.2c-2.3.4-3.8 2.6-3.4 4.9.4 2.3 2.6 3.8 4.9 3.4.8-.1 1.5-.5 2.1-1 1-.9 1.6-2.3 1.4-3.7-.3-2.3-2.5-3.9-4.8-3.6z"
                ></path>
                <path
                  class="st4"
                  d="M181.7-65c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9l.5-8.4c.1-2.4-1.7-4.4-4-4.5z"
                ></path>
                <path
                  class="st4"
                  d="M94.4 47.1c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9l.5-8.4c.1-2.4-1.7-4.4-4-4.5z"
                ></path>
                <path
                  class="st5"
                  d="M65.4 1.7c-2.3-.1-4.3 1.7-4.5 4l-.5 8.4c-.1 2.3 1.7 4.3 4 4.5 1.2.1 2.2-.3 3.1-1.1s1.3-1.7 1.4-2.9l.5-8.4c.1-2.3-1.7-4.3-4-4.5z"
                ></path>
                <path
                  class="st5"
                  d="M157.2-61.8l-6.2 5.6c-1.7 1.6-1.9 4.2-.3 6 1.6 1.7 4.2 1.9 6 .3l6.2-5.6c1.7-1.6 1.9-4.2.3-6s-4.3-1.9-6-.3z"
                ></path>
                <path
                  class="st4"
                  d="M93.8-23.3l-8.3-.5c-2.3-.1-4.3 1.7-4.5 4s1.7 4.3 4 4.5l8.3.5c1.2.1 2.2-.3 3.1-1.1.8-.7 1.3-1.7 1.4-2.9.1-2.4-1.7-4.4-4-4.5z"
                ></path>
                <path
                  class="st5"
                  d="M189.1-35.1l-8.3-.5c-2.3-.1-4.3 1.7-4.5 4s1.7 4.3 4 4.5l8.3.5c1.2.1 2.2-.3 3.1-1.1s1.3-1.7 1.4-2.9c.1-2.4-1.6-4.4-4-4.5z"
                ></path>
                <path
                  class="st4"
                  d="M132.4-42.3l-7.1-4.4c-2-1.2-4.6-.6-5.8 1.4-1.2 2-.6 4.6 1.4 5.8l7.1 4.4c1 .6 2.1.8 3.2.5 1.1-.2 2-.9 2.6-1.9 1.1-2 .5-4.6-1.4-5.8z"
                ></path>
                <path
                  class="st5"
                  d="M88.2 5.7c-2.1 1.1-2.8 3.7-1.7 5.7l4 7.4c1.1 2.1 3.7 2.8 5.7 1.7 1.1-.6 1.8-1.6 2.1-2.7.3-1 .1-2.1-.4-3l-4-7.4c-1.1-2-3.7-2.8-5.7-1.7z"
                ></path>
              </g>
              <g class="hair">
                <path
                  class="st5"
                  d="M232.5-83.3c-2.2 3.1-4.6 6-7.2 8.7-1.8 1.9-1.7 4.9.1 6.7 1.9 1.8 4.9 1.7 6.7-.1 2.9-3 5.6-6.3 8-9.7 1.5-2.1 1-5.1-1.1-6.6s-5-1.1-6.5 1z"
                ></path>
                <path
                  class="st5"
                  d="M144.7-113.4c.2 3.7.2 7.5-.2 11.2-.2 2.6 1.7 4.9 4.3 5.1 2.6.2 4.9-1.7 5.1-4.3.4-4.2.4-8.4.2-12.6-.2-2.6-2.4-4.6-5-4.4-2.5.1-4.5 2.4-4.4 5z"
                ></path>
                <path
                  class="st5"
                  d="M59.3-75.7c3.1 2.2 6 4.5 8.7 7.1 1.9 1.8 4.9 1.7 6.7-.2s1.7-4.9-.2-6.7c-3-2.9-6.3-5.5-9.8-8-2.1-1.5-5.1-1-6.6 1.1s-1 5.2 1.2 6.7z"
                ></path>
                <path
                  class="st5"
                  d="M22.6 11.6c3.7-.2 7.5-.1 11.2.3 2.6.3 4.9-1.6 5.2-4.2s-1.6-4.9-4.2-5.2c-4.2-.4-8.4-.5-12.6-.3-2.6.1-4.6 2.3-4.5 4.9.1 2.7 2.3 4.7 4.9 4.5z"
                ></path>
                <path
                  class="st5"
                  d="M60.2 102.2c2.2-3 4.6-5.9 7.2-8.6 1.8-1.9 1.8-4.9-.1-6.7-1.9-1.8-4.9-1.8-6.7.1-2.9 3-5.6 6.3-8.1 9.7-1.5 2.1-1 5.1 1.1 6.6 2.1 1.4 5 1 6.6-1.1z"
                ></path>
              </g>
              <circle is="upper_circle" class="st6" cx="149.1" cy="15" r="99.4"></circle>
              <g id="side_swirl">
                <path
                  class="st7"
                  d="M192.5 5.6c4.2-4.4 9.6.5 13.6 2.9 4 2.3 7.9 3.4 12.4 2.3 8.7-1.9 13.9-9.9 10.2-18.5-1.9-4.4-5.5-7.4-9.5-9.8-2.3-1.4-5.5-2.5-7-4.9-2.6-4.1 2.6-5.6 5.7-4.4 4.6 1.7 8.3 3.1 13.2 1.4 3.5-1.2 7.6-1.6 8.2-6.1.7-5.3-7.4-7.6-8.1-2.2-.1.2-.1.5-.2.7.8-.6 1.7-1.3 2.5-1.9-1.6.6-3.3 1-4.9 1.5-3.2 1-5.2-.1-8-1.3-4.2-1.6-8.7-1.6-12.6.9-8.9 5.9-4.6 16.6 2.8 21.3 3.9 2.5 10.3 4.7 10.5 10.2.2 6.1-7.6 5.7-11.2 3.6-7.7-4.5-16.2-9.3-23.7-1.6-3.6 3.9 2.3 9.8 6.1 5.9z"
                ></path>
                <path
                  class="st7"
                  d="M132.5 56.1c-.9 3.8-.5 7.5 1.3 11 1.8 3.6 7.8 8 7.6 12.1-.1 3.1-2.8 4.1-5.5 3.5s-4.2-2.3-5.7-4.5c-2.3-3.3-4.5-6.6-8.2-8.5-6.7-3.5-15.8-3-19.4 4.4-1.8 3.7-2.1 8.1-.9 12.1.7 2.3 2 4.3 3.3 6.3.7 1.2 1.6 2.2 1.3 3.7-.4 1.7-1.3 1.6-3.1 1.8-5.3.6-5.4 9 0 8.4 4-.5 8.2-1.3 10.5-4.9 2.3-3.7 1.4-8.1-.6-11.7-1.4-2.6-3.5-4.9-3.7-7.9-.3-4.2 2.2-6.4 6.2-5.5 5.8 1.3 7.2 7.2 11.1 11 5.7 5.5 17.4 5.9 21.4-1.7 2.1-3.9 2.2-8.7.1-12.6-2.5-4.6-9-8.8-7.6-14.6 1.2-5.4-6.9-7.7-8.1-2.4z"
                ></path>
                <path
                  class="st7"
                  d="M138.2-20c13.4-2.9 27.6-.7 37.5 9.4 7.8 8 11.8 19.6 10.2 30.7-3.9 27.4-37.5 39.4-58.4 22-12.2-10.2-14.2-25.9-10.4-40.6 1.4-5.6-7.2-8-8.7-2.4-4.2 16.3-2.4 33.7 9.6 46.4 9.3 9.9 23.6 15.2 37.1 13.8 17.5-1.8 32.6-13.9 38.1-30.7 4.6-13.9 1.4-29.7-7.4-41.3-11.9-15.7-31.3-20-49.9-16-5.7 1.2-3.3 9.9 2.3 8.7z"
                ></path>
                <path
                  class="st5"
                  d="M99.3-54.8l-8 2.4c-2.2.7-3.5 3-2.9 5.2.7 2.2 3 3.5 5.2 2.9l8-2.4c1.1-.3 2-1.1 2.5-2s.7-2.1.3-3.2c-.5-2.2-2.9-3.5-5.1-2.9z"
                ></path>
                <path
                  class="st4"
                  d="M81.8 30.7h-.2c-3.2.6-4.9 4.7-1.8 7.7 2.1 1.2 4.1.8 5.4-.4 1-.9 1.6-2.3 1.4-3.7-.4-2.3-2.5-3.9-4.8-3.6z"
                ></path>
                <path
                  class="st7"
                  d="M124.3-21.7c-3.2 1.7-6.1 4.3-8.3 7.1-1.4 1.8-1.1 4.9.8 6.3 2 1.5 4.7 1.1 6.3-.8.4-.5.8-.9 1.2-1.4l.1-.1c.2-.3.6-.5.8-.8.6-.4 1-.9 1.6-1.3.3-.3.6-.4.9-.6.8-.5-.6.3.1-.1 2-1.1 3.5-3.6 2.3-6-.9-2-3.5-3.5-5.8-2.3z"
                ></path>
              </g>
            </svg>
          </div>
        </div>
      </div>
      <img id="logo-text" src="./images/SweetAlert2.png" alt="SweetAlert2" />
      <div class="stats mobile-hidden">
        Current version:
        <a
          href="https://github.com/sweetalert2/sweetalert2/releases"
          id="current-version"
          aria-label="Current version "
        ></a>
        ● Latest update:
        <a
          href="https://github.com/sweetalert2/sweetalert2/commits/main"
          id="latest-update"
          aria-label="Latest update "
        ></a>
        ● Downloads last month:
        <a
          href="https://npm-stat.com/charts.html?package=sweetalert2"
          id="downloads-last-month"
          aria-label="Downloads last month "
        ></a>
      </div>
      <div id="docsearch"></div>
      <script src="https://cdn.jsdelivr.net/npm/@docsearch/js@3"></script>
      <script>
        docsearch({
          appId: '38BPOKYOZ2',
          apiKey: 'aa152d345260f94e9c0b177ed5437c9e',
          indexName: 'sweetalert2',
          container: '#docsearch',
        })
      </script>
      <h1>A beautiful, responsive, customizable, accessible (WAI-ARIA) replacement for JavaScript's popup boxes</h1>
      <h2>Zero dependencies</h2>
    </header>

    <script>
      function executeExample() {
        // placeholder for the executeExample until it's actually loaded
      }
    </script>

    <div class="showcase normal">
      <div class="normal-alert">Normal alert</div>
      <button onclick="executeExample('normalAlert')">Show normal alert</button>
      <pre data-example-id="normalAlert"></pre>
      <div class="vs-icon"></div>
    </div>

    <div class="showcase sweet">
      <img src="/images/SweetAlert2.png" height="30" alt="SweetAlert2" />
      <button
        class="show-example-btn"
        aria-label="Show SweetAlert2 success message"
        onclick="executeExample('sweetAlert')"
      >
        Show success message
      </button>
      <pre data-example-id="sweetAlert"></pre>
    </div>

    <div class="center-container">
      <p class="center">
        <a href="https://m.do.co/c/12907f2ba0bf" target="_blank" rel="noreferrer noopener" tabindex="-1"
          >Get $100 in free credits with DigitalOcean!</a
        >
      </p>
    </div>

    <!-- Examples -->
    <h3 id="examples">Examples</h3>

    <ul class="examples">
      <li id="message-example">
        <div class="ui">
          <p>A basic message</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A basic message"
            onclick="executeExample('basicMessage')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="basicMessage"></pre>
      </li>

      <li id="title-text-example">
        <div class="ui">
          <p>A title with a text under</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A title with a text under"
            onclick="executeExample('titleText')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="titleText"></pre>
      </li>

      <li id="serror-example">
        <div class="ui">
          <p>A modal with a title, an error icon, a text, and a footer</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A modal with a title, an error icon, a text, and a footer"
            onclick="executeExample('errorType')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="errorType"></pre>
      </li>

      <li id="long-text">
        <div class="ui">
          <p>A modal window with a long content inside:</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A modal window with a long content inside"
            onclick="executeExample('longText')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="longText"></pre>
      </li>

      <li id="custom-html">
        <div class="ui">
          <p>Custom HTML description and buttons with ARIA labels</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: Custom HTML description and buttons"
            onclick="executeExample('customHtml')"
          >
            Try me!
          </button>
        </div>
        <pre
          data-example-id="customHtml"
          data-codepen-css-external="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css"
        ></pre>
      </li>

      <li id="three-buttons">
        <div class="ui">
          <p>A dialog with three buttons</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A dialog with three buttons"
            onclick="executeExample('threeButtons')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="threeButtons"></pre>
      </li>

      <li id="custom-position">
        <div class="ui">
          <p>A custom positioned dialog</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A custom positioned dialog"
            onclick="executeExample('customPosition')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="customPosition"></pre>
      </li>

      <li id="custom-animation">
        <div class="ui">
          <p>
            Custom animation with
            <a href="https://animate.style/" target="_blank" rel="noreferrer noopener" tabindex="-1" class="nowrap"
              >Animate.css <i class="fa fa-external-link"></i
            ></a>
          </p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: jQuery HTML with custom animation"
            onclick="executeExample('customAnimation')"
          >
            Try me!
          </button>
        </div>
        <pre
          data-example-id="customAnimation"
          data-codepen-css-external="https://cdn.jsdelivr.net/npm/animate.css@4.0.0/animate.min.css"
        ></pre>
      </li>

      <li id="confirm-dialog">
        <div class="ui">
          <p>A confirm dialog, with a function attached to the "Confirm"-button</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A confirm dialog, with a function attached to the 'Confirm'-button"
            onclick="executeExample('warningConfirm')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="warningConfirm"></pre>
      </li>

      <li id="dismiss-handle">
        <div class="ui">
          <p>... and by passing a parameter, you can execute something else for "Cancel"</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: passing a parameter, you can execute something else for 'Cancel'"
            onclick="executeExample('handleDismiss')"
          >
            Try me!
          </button>
        </div>
        <pre
          data-example-id="handleDismiss"
          data-codepen-css-external="https://sweetalert2.github.io/styles/bootstrap4-buttons.css"
        ></pre>
      </li>

      <li id="custom-image-example">
        <div class="ui">
          <p>A message with a custom image</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A message with a custom image"
            onclick="executeExample('customImage')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="customImage"></pre>
      </li>

      <li id="custom-width-padding-background">
        <div class="ui">
          <p>A message with custom width, padding, background and animated Nyan Cat</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A message with custom width, padding and background"
            onclick="executeExample('customWidth')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="customWidth"></pre>
      </li>

      <li id="timer-example">
        <div class="ui">
          <p>A message with auto close timer</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A message with auto close timer"
            onclick="executeExample('timer')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="timer"></pre>
      </li>

      <li id="rtl">
        <div class="ui">
          <p>Right-to-left support for Arabic, Persian, Hebrew, and other RTL languages</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: A message in Arabic"
            onclick="executeExample('rtl')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="rtl" data-codepen-html="<body dir='rtl'></body>"></pre>
      </li>

      <li id="ajax-request">
        <div class="ui">
          <p>AJAX request example</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: AJAX request"
            onclick="executeExample('ajaxRequest')"
          >
            Try me!
          </button>
        </div>
        <pre data-example-id="ajaxRequest"></pre>
      </li>
    </ul>

    <!-- Download & Install -->
    <div class="center-container download-section">
      <h3 id="download">Download &amp; install</h3>
      <pre data-highlighjs-ignore><code><span class="unselectable">$ </span>npm install sweetalert2</code></pre>
      <p>
        Or grab from
        <a href="https://www.jsdelivr.com/package/npm/sweetalert2" target="_blank" rel="noopener" class="nowrap"
          >jsdelivr CDN <i class="fa fa-external-link"></i
        ></a>
      </p>
      <pre
        class="center"
      ><code>&lt;script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"&gt;&lt;/script&gt;</code></pre>
      <p class="jsdelivr-info mobile-hidden"></p>
    </div>

    <div class="center-container">
      <h3 id="usage">Usage</h3>
      <div class="mobile-hidden">
        <p>1. Initialize the plugin by referencing the necessary files:</p>
        <pre>
<code>&lt;script src="sweetalert2.all.min.js"&gt;&lt;/script&gt;</code></pre>
        <p class="mobile-hidden">You can also include the stylesheet separately if desired:</p>
        <pre>
<code>&lt;script src="sweetalert2.min.js"&gt;&lt;/script&gt;
&lt;link rel="stylesheet" href="sweetalert2.min.css"&gt;</code></pre>
        <p>Or</p>
      </div>
      <pre>
<code>// ES6 Modules or TypeScript
import Swal from 'sweetalert2'

// CommonJS
const Swal = require('sweetalert2')</code></pre>
      <div class="mobile-hidden">
        <p>It's possible to import JS and CSS separately, e.g. if you need to customize styles:</p>
        <pre>
<code>import Swal from 'sweetalert2/dist/sweetalert2.js'

import 'sweetalert2/src/sweetalert2.scss'</code></pre>
        <p>2. Call the sweetAlert2-function after the page has loaded</p>
      </div>
      <pre><code>Swal.fire({
  title: 'Error!',
  text: 'Do you want to continue',
  icon: 'error',
  confirmButtonText: 'Cool'
})</code></pre>
    </div>

    <div class="center-container">
      <h3 id="frameworks-integrations">Integrations with major JS frameworks</h3>
      <div class="frameworks-integrations">
        <div>
          <a
            href="https://github.com/sweetalert2/sweetalert2-react-content"
            target="_blank"
            rel="noopener"
            aria-label="React integration"
          >
            React
            <br />
            <img src="/images/react.svg" width="125" alt="" />
          </a>
        </div>
        <div>
          <a
            href="https://github.com/avil13/vue-sweetalert2"
            target="_blank"
            rel="noopener"
            aria-label="Vue integration"
          >
            Vue
            <br />
            <img src="/images/vue.png" width="125" alt="" />
          </a>
        </div>
        <div>
          <a
            href="https://github.com/sweetalert2/ngx-sweetalert2"
            target="_blank"
            rel="noopener"
            aria-label="Angular integration"
          >
            Angular
            <br />
            <img src="/images/angular.svg" width="125" alt="" />
          </a>
        </div>
      </div>
    </div>

    <div class="mobile-hidden">
      <!-- Configuration -->
      <h3 id="configuration">Configuration</h3>

      <p class="center">Here are the keys that you can use if you pass an object into sweetAlert2:</p>

      <table id="api">
        <tr class="titles">
          <th>
            Argument<br />
            (<i>Default value</i>)
          </th>
          <th>Description</th>
        </tr>
        <tr id="title">
          <td>
            <h4>title</h4>
            <br />
            <i>''</i>
          </td>
          <td>The title of the popup, as HTML.</td>
        </tr>
        <tr id="titleText">
          <td>
            <h4>titleText</h4>
            <br />
            <i>''</i>
          </td>
          <td>The title of the popup, as text. Useful to avoid HTML injection.</td>
        </tr>
        <tr id="html">
          <td>
            <h4>html</h4>
            <br />
            <i>''</i>
          </td>
          <td>
            A HTML description for the popup.<br />
            If <strong>text</strong> and <strong>html</strong> parameters are provided in the same time,
            <strong>html</strong> will be used.<br />
            [Security] SweetAlert2 does NOT sanitize this parameter. It is the developer's responsibility to escape any
            user input when using the <strong>html</strong> option, so XSS attacks would be prevented.
          </td>
        </tr>
        <tr id="text">
          <td>
            <h4>text</h4>
            <br />
            <i>''</i>
          </td>
          <td>
            A description for the popup.<br />
            If <strong>text</strong> and <strong>html</strong> parameters are provided in the same time,
            <strong>html</strong> will be used.
          </td>
        </tr>
        <tr id="icon">
          <td>
            <h4>icon</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            The icon of the popup. SweetAlert2 comes with 5 built-in icon which will show a corresponding icon
            animation: <strong>warning</strong>, <strong>error</strong>, <strong>success</strong>,
            <strong>info</strong>, and <strong>question</strong>. It can either be put in the array under the key "icon"
            or passed as the third parameter of the function.
          </td>
        </tr>
        <tr id="iconColor">
          <td>
            <h4>iconColor</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>Use this to change the color of the icon.</td>
        </tr>
        <tr id="iconHtml">
          <td>
            <h4>iconHtml</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>The custom HTML content for an icon.</td>
        </tr>
        <tr id="showClass">
          <td>
            <h4>showClass</h4>
            <br />
            <i>
              <pre><code>{
  popup: 'swal2-show',
  backdrop: 'swal2-backdrop-show',
  icon: 'swal2-icon-show'
}</code></pre>
            </i>
          </td>
          <td>CSS classes for animations when showing a popup (fade in)</td>
        </tr>
        <tr id="hideClass">
          <td>
            <h4>hideClass</h4>
            <br />
            <i>
              <pre><code>{
  popup: 'swal2-hide',
  backdrop: 'swal2-backdrop-hide',
  icon: 'swal2-icon-hide'
}</code></pre>
            </i>
          </td>
          <td>CSS classes for animations when hiding a popup (fade out)</td>
        </tr>
        <tr id="footer">
          <td>
            <h4>footer</h4>
            <br />
            <i>''</i>
          </td>
          <td>The footer of the popup. Can be either plain text or HTML.</td>
        </tr>
        <tr id="backdrop">
          <td>
            <h4>backdrop</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Whether or not SweetAlert2 should show a full screen click-to-dismiss backdrop. Can be either a
            <strong>boolean</strong> or a <strong>string</strong> which will be assigned to the CSS
            <strong>background</strong> property.
          </td>
        </tr>
        <tr id="toast">
          <td>
            <h4>toast</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Whether or not an alert should be treated as a toast notification. This option is normally coupled with the
            <strong>position</strong> parameter and a timer. Toasts are NEVER autofocused.
          </td>
        </tr>
        <tr id="target">
          <td>
            <h4>target</h4>
            <br />
            <i>'body'</i>
          </td>
          <td>The container element for adding popup into.</td>
        </tr>
        <tr id="input">
          <td>
            <h4>input</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Input field type, can be
            <strong>text</strong>, <strong>email</strong>, <strong>password</strong>, <strong>number</strong>,
            <strong>tel</strong>, <strong>range</strong>, <strong>textarea</strong>, <strong>select</strong>,
            <strong>radio</strong>, <strong>checkbox</strong>, <strong>file</strong> and <strong>url</strong>.
          </td>
        </tr>
        <tr id="width">
          <td>
            <h4>width</h4>
            <br />
            <i>'32em'</i>
          </td>
          <td>
            Popup window width, including paddings (<i>box-sizing: border-box</i>). Can be in any CSS unit
            (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).
          </td>
        </tr>
        <tr id="padding">
          <td>
            <h4>padding</h4>
            <br />
            <i>'0 0 1.25em'</i>
          </td>
          <td>
            Popup window padding. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>,
            <strong>%</strong>).
          </td>
        </tr>
        <tr id="color">
          <td>
            <h4>color</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Color for title, content and footer (CSS <strong>color</strong> property). The default color is
            <strong>'#545454'</strong>.
          </td>
        </tr>
        <tr id="background">
          <td>
            <h4>background</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>Popup window background (CSS background property). The default background is <strong>'#fff'</strong>.</td>
        </tr>
        <tr id="position">
          <td>
            <h4>position</h4>
            <br />
            <i>'center'</i>
          </td>
          <td>
            Popup window position, can be <strong>'top'</strong>, <strong>'top-start'</strong>,
            <strong>'top-end'</strong>, <strong>'center'</strong>, <strong>'center-start'</strong>,
            <strong>'center-end'</strong>, <strong>'bottom'</strong>, <strong>'bottom-start'</strong>, or
            <strong>'bottom-end'</strong>.
          </td>
        </tr>
        <tr id="grow">
          <td>
            <h4>grow</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Paired with window position, sets the direction the popup should grow in, can be set to
            <strong>'row'</strong>, <strong>'column'</strong>, <strong>'fullscreen'</strong>, or <strong>false</strong>.
          </td>
        </tr>
        <tr id="customClass">
          <td>
            <h4>customClass</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            A custom CSS class for the popup:
            <pre><code>customClass: {
  container: '...',
  popup: '...',
  header: '...',
  title: '...',
  closeButton: '...',
  icon: '...',
  image: '...',
  htmlContainer: '...',
  input: '...',
  inputLabel: '...',
  validationMessage: '...',
  actions: '...',
  confirmButton: '...',
  denyButton: '...',
  cancelButton: '...',
  loader: '...',
  footer: '....',
  timerProgressBar: '....',
}</code></pre>
          </td>
        </tr>
        <tr id="timer">
          <td>
            <h4>timer</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Auto close timer of the popup. Set in ms (milliseconds). See also
            <a href="#getTimerLeft">Swal.getTimerLeft()</a>, <a href="#stopTimer">Swal.stopTimer()</a>,
            <a href="#resumeTimer">Swal.resumeTimer()</a>, <a href="#toggleTimer">Swal.toggleTimer()</a>,
            <a href="#isTimerRunning">Swal.isTimerRunning()</a> and <a href="#increaseTimer">Swal.increaseTimer()</a>.
          </td>
        </tr>
        <tr id="timerProgressBar">
          <td>
            <h4>timerProgressBar</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            If set to true, the timer will have a progress bar at the bottom of a popup. Mostly, this feature is useful
            with toasts.
          </td>
        </tr>
        <tr id="heightAuto">
          <td>
            <h4>heightAuto</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            By default, SweetAlert2 sets html's and body's CSS <strong>height</strong> to
            <strong>auto !important</strong>. If this behavior isn't compatible with your project's layout, set
            <strong>heightAuto</strong> to <strong>false</strong>.
          </td>
        </tr>
        <tr id="allowOutsideClick">
          <td>
            <h4>allowOutsideClick</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            If set to <strong>false</strong>, the user can't dismiss the popup by clicking outside it.<br />You can also
            pass a custom function returning a boolean value, e.g. if you want to disable outside clicks for the loading
            state of a popup.
          </td>
        </tr>
        <tr id="allowEscapeKey">
          <td>
            <h4>allowEscapeKey</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            If set to <strong>false</strong>, the user can't dismiss the popup by pressing the <kbd>Esc</kbd> key. You
            can also pass a custom function returning a boolean value, e.g. if you want to disable the
            <kbd>Esc</kbd> key for the loading state of a popup.
          </td>
        </tr>
        <tr id="allowEnterKey">
          <td>
            <h4>allowEnterKey</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            If set to <strong>false</strong>, the user can't confirm the popup by pressing the <kbd>Enter</kbd> or
            <kbd>Space</kbd> keys, unless they manually focus the confirm button. You can also pass a custom function
            returning a boolean value.
          </td>
        </tr>
        <tr id="stopKeydownPropagation">
          <td>
            <h4>stopKeydownPropagation</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            If set to <strong>false</strong>, SweetAlert2 will allow <strong>keydown</strong> events propagation to the
            document.
          </td>
        </tr>
        <tr id="keydownListenerCapture">
          <td>
            <h4>keydownListenerCapture</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Useful for those who are using SweetAlert2 along with Bootstrap modals. By default
            <strong>keydownListenerCapture</strong> is <strong>false</strong> which means when a user hits
            <kbd>Esc</kbd>, both SweetAlert2 and Bootstrap modals will be closed. Set
            <strong>keydownListenerCapture</strong> to <strong>true</strong> to fix that behavior.
          </td>
        </tr>
        <tr id="showConfirmButton">
          <td>
            <h4>showConfirmButton</h4>
            <br />
            <i>true</i>
          </td>
          <td>If set to <strong>false</strong>, a "Confirm"-button will not be shown.</td>
        </tr>
        <tr id="showDenyButton">
          <td>
            <h4>showDenyButton</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            If set to <strong>true</strong>, a "Deny"-button will be shown. It can be useful when you want a popup with
            3 buttons.
          </td>
        </tr>
        <tr id="showCancelButton">
          <td>
            <h4>showCancelButton</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            If set to <strong>true</strong>, a "Cancel"-button will be shown, which the user can click on to dismiss the
            modal.
          </td>
        </tr>
        <tr id="confirmButtonText">
          <td>
            <h4>confirmButtonText</h4>
            <br />
            <i>'OK'</i>
          </td>
          <td>Use this to change the text on the "Confirm"-button.</td>
        </tr>
        <tr id="denyButtonText">
          <td>
            <h4>denyButtonText</h4>
            <br />
            <i>'No'</i>
          </td>
          <td>Use this to change the text on the "Deny"-button.</td>
        </tr>
        <tr id="cancelButtonText">
          <td>
            <h4>cancelButtonText</h4>
            <br />
            <i>'Cancel'</i>
          </td>
          <td>Use this to change the text on the "Cancel"-button.</td>
        </tr>
        <tr id="confirmButtonColor">
          <td>
            <h4>confirmButtonColor</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Use this to change the background color of the "Confirm"-button. The default color is
            <strong>#3085d6</strong>
          </td>
        </tr>
        <tr id="denyButtonColor">
          <td>
            <h4>denyButtonColor</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Use this to change the background color of the "Deny"-button. The default color is <strong>#dd6b55</strong>
          </td>
        </tr>
        <tr id="cancelButtonColor">
          <td>
            <h4>cancelButtonColor</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Use this to change the background color of the "Cancel"-button. The default color is <strong>#aaa</strong>
          </td>
        </tr>
        <tr id="confirmButtonAriaLabel">
          <td>
            <h4>confirmButtonAriaLabel</h4>
            <br />
            <i>''</i>
          </td>
          <td>Use this to change the <strong>aria-label</strong> for the "Confirm"-button.</td>
        </tr>
        <tr id="denyButtonAriaLabel">
          <td>
            <h4>denyButtonAriaLabel</h4>
            <br />
            <i>''</i>
          </td>
          <td>Use this to change the <strong>aria-label</strong> for the "Deny"-button.</td>
        </tr>
        <tr id="cancelButtonAriaLabel">
          <td>
            <h4>cancelButtonAriaLabel</h4>
            <br />
            <i>''</i>
          </td>
          <td>Use this to change the <strong>aria-label</strong> for the "Cancel"-button.</td>
        </tr>
        <tr id="buttonsStyling">
          <td>
            <h4>buttonsStyling</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Apply default styling to buttons. If you want to use your own classes (e.g. Bootstrap classes) set this
            parameter to <strong>false</strong>.
          </td>
        </tr>
        <tr id="reverseButtons">
          <td>
            <h4>reverseButtons</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Set to <strong>true</strong> if you want to invert default buttons positions ("Confirm"-button on the right
            side).
          </td>
        </tr>
        <tr id="focusConfirm">
          <td>
            <h4>focusConfirm</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Set to <strong>false</strong> if you want to focus the first element in tab order instead of
            "Confirm"-button by default.
          </td>
        </tr>
        <tr id="returnFocus">
          <td>
            <h4>returnFocus</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Set to <strong>false</strong> if you don't want to return the focus to the element that invoked the modal
            after the modal is closed.
          </td>
        </tr>
        <tr id="focusDeny">
          <td>
            <h4>focusDeny</h4>
            <br />
            <i>false</i>
          </td>
          <td>Set to <strong>true</strong> if you want to focus the "Deny"-button by default.</td>
        </tr>
        <tr id="focusCancel">
          <td>
            <h4>focusCancel</h4>
            <br />
            <i>false</i>
          </td>
          <td>Set to <strong>true</strong> if you want to focus the "Cancel"-button by default.</td>
        </tr>
        <tr id="showCloseButton">
          <td>
            <h4>showCloseButton</h4>
            <br />
            <i>false</i>
          </td>
          <td>Set to <strong>true</strong> to show close button in top right corner of the popup.</td>
        </tr>
        <tr id="closeButtonHtml">
          <td>
            <h4>closeButtonHtml</h4>
            <br />
            <i>'&amp;times;'</i>
          </td>
          <td>Use this to change the content of the close button.</td>
        </tr>
        <tr id="closeButtonAriaLabel">
          <td>
            <h4>closeButtonAriaLabel</h4>
            <br />
            <i>'Close this dialog'</i>
          </td>
          <td>Use this to change the <strong>aria-label</strong> for the close button.</td>
        </tr>
        <tr id="loaderHtml">
          <td>
            <h4>loaderHtml</h4>
            <br />
            <i>''</i>
          </td>
          <td>Use this to change the HTML content of the loader.</td>
        </tr>
        <tr id="showLoaderOnConfirm">
          <td>
            <h4>showLoaderOnConfirm</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Set to <strong>true</strong> to disable buttons and show the loader instead of the Confirm button. Use it in
            combination with the <a href="#preConfirm"><strong>preConfirm</strong></a> parameter.
          </td>
        </tr>
        <tr id="showLoaderOnDeny">
          <td>
            <h4>showLoaderOnDeny</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            Set to <strong>true</strong> to disable buttons and show the loader instead of the Deny button. Use it in
            combination with the <a href="#preDeny"><strong>preDeny</strong></a> parameter.
          </td>
        </tr>
        <tr id="scrollbarPadding">
          <td>
            <h4>scrollbarPadding</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Set to <strong>false</strong> to disable body padding adjustment when the page scrollbar gets hidden while
            the popup is shown
          </td>
        </tr>
        <tr id="preConfirm">
          <td>
            <h4>preConfirm</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Function to execute before confirming, may be async (Promise-returning) or sync. <br />Returned (or
            resolved) value can be:
            <ul>
              <li><strong>false</strong> to prevent a popup from closing</li>
              <li>
                anything else to pass that value as the <strong>result.value</strong> of <strong>Swal.fire()</strong>
              </li>
              <li><strong>undefined</strong> to keep the default <strong>result.value</strong></li>
            </ul>
            See <a href="#ajax-request">usage example</a>.
          </td>
        </tr>
        <tr id="preDeny">
          <td>
            <h4>preDeny</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Function to execute before denying, may be async (Promise-returning) or sync. <br />Returned (or resolved)
            value can be:
            <ul>
              <li><strong>false</strong> to prevent a popup from closing</li>
              <li>
                anything else to pass that value as the <strong>result.value</strong> of <strong>Swal.fire()</strong>
              </li>
              <li><strong>undefined</strong> to keep the default <strong>result.value</strong></li>
            </ul>
          </td>
        </tr>
        <tr id="returnInputValueOnDeny">
          <td>
            <h4>returnInputValueOnDeny</h4>
            <br />
            <i>false</i>
          </td>
          <td>
            If you want to return the input value as <strong>result.value</strong> when denying the popup, set to
            <strong>true</strong>. Otherwise, the denying will set <strong>result.value</strong> to
            <strong>false</strong>.
          </td>
        </tr>
        <tr id="imageUrl">
          <td>
            <h4>imageUrl</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>Add a customized icon for the popup. Should contain a string with the path or URL to the image.</td>
        </tr>
        <tr id="imageWidth">
          <td>
            <h4>imageWidth</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            If imageUrl is set, you can specify imageWidth to describes image width. Can be in any CSS unit
            (<strong>px</strong>, <strong>em/rem</strong>, <strong>%</strong>).
          </td>
        </tr>
        <tr id="imageHeight">
          <td>
            <h4>imageHeight</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Custom image height. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>,
            <strong>%</strong>).
          </td>
        </tr>
        <tr id="imageAlt">
          <td>
            <h4>imageAlt</h4>
            <br />
            <i>''</i>
          </td>
          <td>An alternative text for the custom image icon.</td>
        </tr>
        <tr id="inputLabel">
          <td>
            <h4>inputLabel</h4>
            <br />
            <i>''</i>
          </td>
          <td>Input field label.</td>
        </tr>
        <tr id="inputPlaceholder">
          <td>
            <h4>inputPlaceholder</h4>
            <br />
            <i>''</i>
          </td>
          <td>Input field placeholder.</td>
        </tr>
        <tr id="inputValue">
          <td>
            <h4>inputValue</h4>
            <br />
            <i>''</i>
          </td>
          <td>
            Input field initial value. <br /><br />
            If the input type is
            <h4>select</h4>
            ,
            <h4>inputValue</h4>
            will represent the selected
            <h4>&lt;option&gt;</h4>
            tag. <br /><br />
            If the input type is
            <h4>checkbox</h4>
            ,
            <h4>inputValue</h4>
            will represent the
            <h4>checked</h4>
            state. <br /><br />
            If the input type is
            <h4>text</h4>
            ,
            <h4>email</h4>
            ,
            <h4>number</h4>
            ,
            <h4>tel</h4>
            or
            <h4>textarea</h4>
            a Promise can be accepted as
            <h4>inputValue</h4>
            .
          </td>
        </tr>
        <tr id="inputOptions">
          <td>
            <h4>inputOptions</h4>
            <br />
            <i>{}</i>
          </td>
          <td>
            If <strong>input</strong> parameter is set to <strong>"select"</strong> or <strong>"radio"</strong>, you can
            provide options. Can be a Map or a plain object, with keys that represent option values and values that
            represent option text. You can also provide plain object or Map as values that will represented a group of
            options, being the label of this <strong>&lt;optgroup&gt;</strong> the key. Finally, you can also provide a
            Promise that resolves with one of those types.
          </td>
        </tr>
        <tr id="inputAutoFocus">
          <td>
            <h4>inputAutoFocus</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Automatically focus the input when popup is shown. Set this parameter to
            <strong>false</strong> to disable auto-focusing.
          </td>
        </tr>
        <tr id="inputAutoTrim">
          <td>
            <h4>inputAutoTrim</h4>
            <br />
            <i>true</i>
          </td>
          <td>
            Automatically remove whitespaces from both ends of a result string. Set this parameter to
            <strong>false</strong> to disable auto-trimming.
          </td>
        </tr>
        <tr id="inputAttributes">
          <td>
            <h4>inputAttributes</h4>
            <br />
            <i>{}</i>
          </td>
          <td>
            HTML input attributes (e.g. <strong>min</strong>, <strong>max</strong>, <strong>autocomplete</strong>,
            <strong>accept</strong>), that are added to the input field. Object keys will represent attributes names,
            object values will represent attributes values.
          </td>
        </tr>
        <tr id="inputValidator">
          <td>
            <h4>inputValidator</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Validator for input field, may be async (Promise-returning) or sync. <br />Returned (or resolved) value can
            be:
            <ul>
              <li>
                a <strong>falsy</strong> value (<strong>undefined</strong>, <strong>null</strong>,
                <strong>false</strong>) for indicating <i>success</i>
              </li>
              <li>a string value (error message) for indicating <i>failure</i></li>
            </ul>
            See <a href="#input-select">usage example</a>.
          </td>
        </tr>
        <tr id="validationMessage">
          <td>
            <h4>validationMessage</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>A custom validation message for default validators (email, url).</td>
        </tr>
        <tr id="progressSteps">
          <td>
            <h4>progressSteps</h4>
            <br />
            <i>[]</i>
          </td>
          <td>Progress steps, useful for queues.</td>
        </tr>
        <tr id="currentProgressStep">
          <td>
            <h4>currentProgressStep</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>Current active progress step.</td>
        </tr>
        <tr id="progressStepsDistance">
          <td>
            <h4>progressStepsDistance</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Distance between progress steps. Can be in any CSS unit (<strong>px</strong>, <strong>em/rem</strong>,
            <strong>%</strong>).
          </td>
        </tr>
        <tr id="willOpen">
          <td>
            <h4>willOpen</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Synchronously runs before the popup is shown on screen. Provides popup DOM element as
            the argument.
          </td>
        </tr>
        <tr id="didOpen">
          <td>
            <h4>didOpen</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Asynchronously runs after the popup has been shown on screen. Provides popup DOM
            element as the argument.
          </td>
        </tr>
        <tr id="didRender">
          <td>
            <h4>didRender</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Synchronously runs after the popup DOM has been updated (ie. just before the popup is
            repainted on the screen).<br />
            Provides popup DOM element as the argument.<br />
            Typically, this will happen after <strong>Swal.fire()</strong> or <strong>Swal.update()</strong>.<br />
            If you want to perform changes in the popup's DOM, that survive <strong>Swal.update()</strong>, prefer
            <strong>didRender</strong> over <strong>willOpen</strong>.
          </td>
        </tr>
        <tr id="willClose">
          <td>
            <h4>willClose</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Synchronously runs when the popup closes by user interaction (and not due to another
            popup being fired). Provides popup DOM element as the argument.
          </td>
        </tr>
        <tr id="didClose">
          <td>
            <h4>didClose</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Asynchronously runs after the popup has been disposed by user interaction (and not due
            to another popup being fired).
          </td>
        </tr>
        <tr id="didDestroy">
          <td>
            <h4>didDestroy</h4>
            <br />
            <i>undefined</i>
          </td>
          <td>
            Popup lifecycle hook. Synchronously runs after popup has been destroyed either by user interaction or by
            another popup.<br />
            If you have cleanup operations that you need to reliably execute each time a popup is closed, prefer
            <strong>didDestroy</strong> over <strong>didClose</strong>.
          </td>
        </tr>
      </table>

      <p class="center" id="mixin">
        You can easily reuse configuration by creating your own <strong>Swal</strong> with
        <strong>Swal.mixin({ ...options })</strong>:
      </p>
    </div>

    <ul class="examples">
      <li>
        <div class="ui">
          <p>Mixin example</p>
          <button class="show-example-btn" aria-label="Try me! Example: Mixin" onclick="executeExample('mixin')">
            Try me!
          </button>
        </div>
        <pre data-example-id="mixin"></pre>
      </li>
    </ul>

    <!-- Declarative templates -->
    <div class="center-container mobile-hidden">
      <h3 id="declarative-templates">Declarative templates and declarative triggering</h3>
      <p class="center">
        There's also the declarative way to define a popup, via the
        <a
          href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"
          target="_blank"
          rel="noreferrer noopener"
          tabindex="-1"
          ><strong>&lt;template&gt;</strong></a
        >
        tag. This is handy when you want to define popup on server side (SSR).
      </p>
    </div>

    <ul class="examples mobile-hidden">
      <li id="declarative-template">
        <div class="ui">
          <p>Declarative template example</p>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: Declarative template"
            onclick="executeExample('declarativeTemplate')"
          >
            Try me!
          </button>
        </div>
        <template id="my-template">
          <swal-title>Save changes to "Untitled 1" before closing?</swal-title>
          <swal-icon type="warning" color="red"></swal-icon>
          <swal-button type="confirm">Save As</swal-button>
          <swal-button type="cancel">Cancel</swal-button>
          <swal-button type="deny">Close without Saving</swal-button>
          <swal-param name="allowEscapeKey" value="false"></swal-param>
          <swal-param name="customClass" value='{ "popup": "my-popup" }'></swal-param>
          <swal-function-param name="didOpen" value="popup => console.log(popup)"></swal-function-param>
        </template>
        <div style="display: inline-flex; flex-direction: column">
          <pre style="margin-top: 10px"><code class="language-html">&lt;template id="my-template"&gt;
  &lt;swal-title&gt;
    Save changes to "Untitled 1" before closing?
  &lt;/swal-title&gt;
  &lt;swal-icon type="warning" color="red"&gt;&lt;/swal-icon&gt;
  &lt;swal-button type="confirm"&gt;
    Save As
  &lt;/swal-button&gt;
  &lt;swal-button type="cancel"&gt;
    Cancel
  &lt;/swal-button&gt;
  &lt;swal-button type="deny"&gt;
    Close without Saving
  &lt;/swal-button&gt;
  &lt;swal-param name="allowEscapeKey" value="false" /&gt;
  &lt;swal-param
    name="customClass"
    value='{ "popup": "my-popup" }' /&gt;
  &lt;swal-function-param
    name="didOpen"
    value="popup =&gt; console.log(popup)" /&gt;
&lt;/template&gt;</code></pre>
          <pre data-example-id="declarativeTemplate" style="margin-top: 10px"></pre>
        </div>
      </li>
    </ul>

    <div class="center-container mobile-hidden">
      <p class="center">Supported template elements:</p>
      <pre><code class="language-html">&lt;swal-title&gt;...&lt;/swal-title&gt;
&lt;swal-html&gt;...&lt;/swal-html&gt;
&lt;swal-footer&gt;...&lt;/swal-footer&gt;

&lt;swal-param name="..." value="..." /&gt;
&lt;swal-function-param name="..." value="..." /&gt;

&lt;swal-button type="..." color="..." aria-label="..."&gt;...&lt;/swal-button&gt;
&lt;swal-image src="..." width="..." height="..." alt="..." /&gt;
&lt;swal-icon type="..." color="..."&gt;...&lt;/swal-icon&gt;
&lt;swal-input type="..." label="..." placeholder="..." value="..." /&gt;
&lt;swal-input-option value="..."&gt;...&lt;/swal-input-option&gt;</code></pre>
    </div>

    <div class="center-container mobile-hidden">
      <p id="declarative-triggering" class="center">
        And you can even trigger SweetAlert2 popups declaratively! Use the <strong>bindClickHandler()</strong> method
        for that:
      </p>
    </div>

    <ul class="examples mobile-hidden">
      <li>
        <div class="ui">
          <button class="show-example-btn" data-swal-template="#my-template" style="margin: 1em 0">
            Trigger modal
          </button>
          <button class="show-example-btn" data-swal-toast-template="#my-template">Trigger toast</button>
        </div>
        <div style="display: inline-flex; flex-direction: column">
          <pre style="margin-top: 10px"><code class="language-html">&lt;button data-swal-template="#my-template"&gt;
  Trigger modal
&lt;/button&gt;

&lt;button data-swal-toast-template="#my-template"&gt;
  Trigger toast
&lt;/button&gt;</code></pre>
          <pre
            data-example-id="declarativeTriggering"
            data-codepen-html="<template id='my-template'>\n  <swal-title>Hey!</swal-title>\n</template>\n\n<button class='show-example-btn' data-swal-template='#my-template'>\n  Trigger modal\n</button>\n\n<button class='show-example-btn' data-swal-toast-template='#my-template'>\n  Trigger toast\n</button>"
            style="margin-top: 10px"
          ></pre>
        </div>
      </li>
    </ul>

    <!-- Handling Buttons -->
    <div class="center-container">
      <h3 id="handling-buttons">Handling Buttons (Confirm, Deny, Cancel)</h3>
      <p class="center">
        When the user clicks a button, the Promise returned by <strong>Swal.fire()</strong> will be resolved with the
        <strong>SweetAlertResult</strong> object:
      </p>
      <table class="dismiss-reasons">
        <tr class="titles">
          <th>Key</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><strong>isConfirmed</strong></td>
          <td>The "Confirm" button was clicked, the <strong>value</strong> will contain the result</td>
        </tr>
        <tr>
          <td><strong>isDenied</strong></td>
          <td>
            The "Deny" button was clicked, the <strong>value</strong> will be <strong>false</strong>.<br />
            Alternatively, if there's an input in a popup, you can use <strong>returnInputValueOnDeny: true</strong> to
            return the input's value.
          </td>
        </tr>
        <tr>
          <td><strong>isDismissed</strong></td>
          <td>
            The "Cancel" button was clicked, the <strong>dismiss</strong> will be
            <strong class="nowrap">Swal.DismissReason.cancel</strong>
          </td>
        </tr>
        <tr>
          <td><strong>value</strong></td>
          <td>
            The value from the popup, possible values:
            <ul>
              <li><strong>true</strong> for simple confirmed dialogs</li>
              <li><strong>false</strong> for denied popups</li>
              <li>any value for popups with inputs</li>
            </ul>
          </td>
        </tr>
        <tr>
          <td><strong>dismiss</strong></td>
          <td>
            The dismissal reason, see the <a href="#handling-dismissals">Handling Dismissals</a> section for details
          </td>
        </tr>
      </table>
    </div>

    <!-- Handling Dismissals -->
    <div class="center-container">
      <h3 id="handling-dismissals">Handling Dismissals</h3>

      <p class="center">
        When an alert is dismissed by the user, the Promise returned by <strong>Swal.fire()</strong> will be resolved
        with an object <strong class="nowrap">{ isDismissed: true, dismiss: reason }</strong> documenting the reason it
        was dismissed:
      </p>

      <table class="dismiss-reasons">
        <tr class="titles">
          <th>Reason</th>
          <th>Description</th>
          <th>Related configuration</th>
        </tr>
        <tr>
          <td><h4 class="nowrap">Swal.DismissReason.backdrop</h4></td>
          <td>The user clicked the backdrop.</td>
          <td><a href="#allowOutsideClick">allowOutsideClick</a></td>
        </tr>
        <tr>
          <td><h4 class="nowrap">Swal.DismissReason.cancel</h4></td>
          <td>The user clicked the cancel button.</td>
          <td><a href="#showCancelButton">showCancelButton</a></td>
        </tr>
        <tr>
          <td><h4 class="nowrap">Swal.DismissReason.close</h4></td>
          <td>The user clicked the close button.</td>
          <td><a href="#showCloseButton">showCloseButton</a></td>
        </tr>
        <tr>
          <td><h4 class="nowrap">Swal.DismissReason.esc</h4></td>
          <td>The user clicked the <kbd>Esc</kbd> key.</td>
          <td><a href="#allowEscapeKey">allowEscapeKey</a></td>
        </tr>
        <tr>
          <td><h4 class="nowrap">Swal.DismissReason.timer</h4></td>
          <td>The timer ran out, and the alert closed automatically.</td>
          <td><a href="#timer">timer</a></td>
        </tr>
      </table>

      <p class="center">
        If a popup is dismissed by <strong class="nowrap">Swal.close()</strong>, the Promise will be resolved with an
        object <strong class="nowrap">{ isDismissed: true }</strong> (<strong>dismiss</strong> will be
        <strong>undefined</strong>).
      </p>
    </div>

    <!-- Icons -->
    <h3 id="icons">Icons</h3>
    <table class="popup-icons">
      <tr>
        <td><h4>success</h4></td>
        <td>
          <div class="swal2-icon swal2-success">
            <div class="swal2-success-circular-line-left"></div>
            <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
            <div class="swal2-success-ring"></div>
            <div class="swal2-success-fix"></div>
            <div class="swal2-success-circular-line-right"></div>
          </div>
        </td>
        <td>
          <button class="show-example-btn" data-icon="success" aria-label="Try me! Example: success modal">
            Try me!
          </button>
        </td>
      </tr>
      <tr>
        <td><h4>error</h4></td>
        <td>
          <div class="swal2-icon swal2-error">
            <span class="swal2-x-mark"
              ><span class="swal2-x-mark-line-left"></span><span class="swal2-x-mark-line-right"></span
            ></span>
          </div>
        </td>
        <td>
          <button class="show-example-btn" data-icon="error" aria-label="Try me! Example: error modal">Try me!</button>
        </td>
      </tr>
      <tr>
        <td><h4>warning</h4></td>
        <td>
          <div class="swal2-icon swal2-warning"><div class="swal2-icon-content">!</div></div>
        </td>
        <td>
          <button class="show-example-btn" data-icon="warning" aria-label="Try me! Example: warning modal">
            Try me!
          </button>
        </td>
      </tr>
      <tr>
        <td><h4>info</h4></td>
        <td>
          <div class="swal2-icon swal2-info"><div class="swal2-icon-content">i</div></div>
        </td>
        <td>
          <button class="show-example-btn" data-icon="info" aria-label="Try me! Example: info modal">Try me!</button>
        </td>
      </tr>
      <tr>
        <td><h4>question</h4></td>
        <td>
          <div class="swal2-icon swal2-question"><div class="swal2-icon-content">?</div></div>
        </td>
        <td>
          <button class="show-example-btn" data-icon="question" aria-label="Try me! Example: question modal">
            Try me!
          </button>
        </td>
      </tr>
    </table>

    <!-- Input Types -->
    <h3 id="input-types">Input Types</h3>
    <table class="input-types">
      <tr id="input-text">
        <td><h4>text</h4></td>
        <td>
          <pre data-example-id="textInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type text"
            onclick="executeExample('textInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-email">
        <td><h4>email</h4></td>
        <td>
          <pre data-example-id="emailInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type email"
            onclick="executeExample('emailInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-url">
        <td><h4>url</h4></td>
        <td>
          <pre data-example-id="urlInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type url"
            onclick="executeExample('urlInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-password">
        <td><h4>password</h4></td>
        <td>
          <pre data-example-id="passwordInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type password"
            onclick="executeExample('passwordInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-textarea">
        <td><h4>textarea</h4></td>
        <td>
          <pre data-example-id="textareaInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type textarea"
            onclick="executeExample('textareaInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-select">
        <td><h4>select</h4></td>
        <td>
          <pre data-example-id="selectInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type select"
            onclick="executeExample('selectInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-radio">
        <td><h4>radio</h4></td>
        <td>
          <pre data-example-id="radioInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type radio"
            onclick="executeExample('radioInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-checkbox">
        <td><h4>checkbox</h4></td>
        <td>
          <pre data-example-id="checkboxInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type checkbox"
            onclick="executeExample('checkboxInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-file">
        <td><h4>file</h4></td>
        <td>
          <pre data-example-id="fileInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type file"
            onclick="executeExample('fileInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="input-range">
        <td><h4>range</h4></td>
        <td>
          <pre data-example-id="rangeInput"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: input type range"
            onclick="executeExample('rangeInput')"
          >
            Try me!
          </button>
        </td>
      </tr>

      <tr id="multiple-inputs" class="mobile-hidden">
        <td colspan="3">
          <p>
            Multiple inputs aren't supported, you can achieve them by using <strong>html</strong> and
            <strong>preConfirm</strong> parameters.<br />
            Inside the <strong>preConfirm()</strong> function you can return (or, if async, resolve with) the custom
            result:
          </p>
        </td>
      </tr>

      <tr id="multiple-inputs-example" class="mobile-hidden">
        <td></td>
        <td>
          <pre data-example-id="multipleInputs"></pre>
        </td>
        <td>
          <button
            class="show-example-btn"
            aria-label="Try me! Example: multiple inputs"
            onclick="executeExample('multipleInputs')"
          >
            Try me!
          </button>
        </td>
      </tr>
    </table>

    <div class="mobile-hidden">
      <!-- Methods -->
      <h3 id="methods">Methods</h3>
      <table>
        <tr class="titles">
          <th>Method</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><h4>Swal.isVisible()</h4></td>
          <td>Determine if popup is shown.</td>
        </tr>
        <tr>
          <td><h4>Swal.mixin({ ...options })</h4></td>
          <td>
            Returns an extended version of <strong>Swal</strong> containing <strong>params</strong> as defaults. Useful
            for reusing Swal configuration.
          </td>
        </tr>
        <tr id="update">
          <td><h4>Swal.update({ ...options })</h4></td>
          <td>Updates popup options.</td>
        </tr>
        <tr>
          <td><h4>Swal.close()</h4></td>
          <td>
            Close the currently open SweetAlert2 popup programmatically, the Promise returned by
            <strong>Swal.fire()</strong> will be resolved with an empty object <strong class="nowrap">{ }</strong>
          </td>
        </tr>
        <tr>
          <td><h4>Swal.getContainer()</h4></td>
          <td>Get the popup container which contains the backdrop and the popup itself.</td>
        </tr>
        <tr>
          <td><h4>Swal.getPopup()</h4></td>
          <td>Get the popup.</td>
        </tr>
        <tr>
          <td><h4>Swal.getTitle()</h4></td>
          <td>Get the popup title.</td>
        </tr>
        <tr>
          <td><h4>Swal.getProgressSteps()</h4></td>
          <td>Get the progress steps.</td>
        </tr>
        <tr>
          <td><h4>Swal.getCloseButton()</h4></td>
          <td>Get the close button.</td>
        </tr>
        <tr>
          <td><h4>Swal.getIcon()</h4></td>
          <td>Get the <a href="#icons">icon</a>.</td>
        </tr>
        <tr>
          <td><h4>Swal.getIconContent()</h4></td>
          <td>Get the <a href="#icons">icon</a> content (without border).</td>
        </tr>
        <tr>
          <td><h4>Swal.getHtmlContainer()</h4></td>
          <td>Gets the DOM element where the <strong>html</strong>/<strong>text</strong> parameter is rendered to.</td>
        </tr>
        <tr>
          <td><h4>Swal.getImage()</h4></td>
          <td>Get the <a href="#image">image</a>.</td>
        </tr>
        <tr>
          <td><h4>Swal.getActions()</h4></td>
          <td>Get the actions block (buttons container).</td>
        </tr>
        <tr>
          <td><h4>Swal.getFooter()</h4></td>
          <td>Get the popup footer.</td>
        </tr>
        <tr>
          <td><h4>Swal.getFocusableElements()</h4></td>
          <td>Get all focusable elements in the popup.</td>
        </tr>
        <tr id="getConfirmButton">
          <td><h4>Swal.getConfirmButton()</h4></td>
          <td>Get the "Confirm" button.</td>
        </tr>
        <tr>
          <td><h4>Swal.getDenyButton()</h4></td>
          <td>Get the "Deny" button.</td>
        </tr>
        <tr>
          <td><h4>Swal.getCancelButton()</h4></td>
          <td>Get the "Cancel" button.</td>
        </tr>
        <tr>
          <td><h4>Swal.enableButtons()</h4></td>
          <td>Enable "Confirm" and "Cancel" buttons.</td>
        </tr>
        <tr>
          <td><h4>Swal.disableButtons()</h4></td>
          <td>Disable "Confirm" and "Cancel" buttons.</td>
        </tr>
        <tr id="showLoading">
          <td><h4>Swal.showLoading()</h4></td>
          <td>
            Shows loader (spinner), this is useful with AJAX requests.<br /><br />
            By default the loader be shown instead of the "Confirm" button, but if you want another button to be
            replaced with a loader, just pass it like this:
            <strong class="nowrap">Swal.showLoading(Swal.getDenyButton())</strong>
          </td>
        </tr>
        <tr id="hideLoading">
          <td><h4>Swal.hideLoading()</h4></td>
          <td>Hides loader and shows back the button which was hidden by .showLoading()</td>
        </tr>
        <tr>
          <td><h4>Swal.isLoading()</h4></td>
          <td>
            Determine if popup is in the loading state. Related methods:
            <a href="#showLoading" class="nowrap">Swal.showLoading()</a> and
            <a href="#hideLoading" class="nowrap">Swal.hideLoading()</a>
          </td>
        </tr>
        <tr id="getTimerLeft">
          <td><h4>Swal.getTimerLeft()</h4></td>
          <td>Returns the time left in case when <a href="#timer">timer</a> parameter is set.</td>
        </tr>
        <tr id="stopTimer">
          <td><h4>Swal.stopTimer()</h4></td>
          <td>Stops the timer in case when <a href="#timer">timer</a> parameter is set. Returns the time left</td>
        </tr>
        <tr id="resumeTimer">
          <td><h4>Swal.resumeTimer()</h4></td>
          <td>Resume the <a href="#timer">timer</a> previously stopped. Returns the time left</td>
        </tr>
        <tr id="toggleTimer">
          <td><h4>Swal.toggleTimer()</h4></td>
          <td>Toggle state of the <a href="#timer">timer</a> between stopped and running. Returns the time left</td>
        </tr>
        <tr id="isTimerRunning">
          <td><h4>Swal.isTimerRunning()</h4></td>
          <td>
            Returns the status of a <a href="#timer">timer</a>: <strong>true</strong> if is running,
            <strong>false</strong> if it's paused
          </td>
        </tr>
        <tr id="increaseTimer">
          <td><h4>Swal.increaseTimer(n)</h4></td>
          <td>Increase the <a href="#timer">timer</a> by <strong>n</strong> milliseconds. Returns the time left</td>
        </tr>
        <tr>
          <td><h4>Swal.clickConfirm()</h4></td>
          <td>Click the "Confirm"-button programmatically.</td>
        </tr>
        <tr>
          <td><h4>Swal.clickDeny()</h4></td>
          <td>Click the "Deny"-button programmatically.</td>
        </tr>
        <tr>
          <td><h4>Swal.clickCancel()</h4></td>
          <td>Click the "Cancel"-button programmatically.</td>
        </tr>
        <tr>
          <td><h4>Swal.getInput()</h4></td>
          <td>Get the input DOM node, this method works with <a href="#input">input parameter</a>.</td>
        </tr>
        <tr>
          <td><h4>Swal.disableInput()</h4></td>
          <td>Disable input. A disabled input element is unusable and un-clickable.</td>
        </tr>
        <tr>
          <td><h4>Swal.enableInput()</h4></td>
          <td>Enable input.</td>
        </tr>
        <tr id="showValidationMessage">
          <td><h4>Swal.showValidationMessage(message)</h4></td>
          <td>Show the validation message DOM node.</td>
        </tr>
        <tr>
          <td><h4>Swal.resetValidationMessage()</h4></td>
          <td>Hide the validation message DOM node.</td>
        </tr>
        <tr>
          <td><h4>Swal.getValidationMessage()</h4></td>
          <td>Get the validation message DOM node.</td>
        </tr>
        <tr>
          <td><h4>Swal.isValidParameter(param)</h4></td>
          <td>Determine if parameter name is valid.</td>
        </tr>
        <tr>
          <td><h4>Swal.isUpdatableParameter(param)</h4></td>
          <td>Determine if parameter name is valid for <a href="#update">Swal.update()</a> method.</td>
        </tr>
      </table>
    </div>

    <!-- Themes -->
    <h3 id="themes">
      <a href="https://github.com/sweetalert2/sweetalert2-themes" target="_blank"
        >Themes <i class="fa fa-external-link"></i
      ></a>
    </h3>
    <div class="themes center-container">
      <br />
      <h4>Dark</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/dark" target="_blank">
        <img src="images/themes-dark.png" alt="theme dark" />
      </a>

      <br />
      <h4>Minimal</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/minimal" target="_blank">
        <img src="images/themes-minimal.png" alt="theme minimal" />
      </a>

      <br />
      <h4>Borderless</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/borderless" target="_blank">
        <img src="images/themes-borderless.png" alt="theme borderless" />
      </a>

      <br />
      <h4>Bootstrap 4</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/bootstrap-4" target="_blank">
        <img src="images/themes-bootstrap-4.png" alt="theme bootstrap 4" />
      </a>

      <br />
      <h4>Bulma</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/bulma" target="_blank">
        <img src="images/themes-bulma.png" alt="theme bulma" />
      </a>

      <br />
      <h4>Material UI</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/material-ui" target="_blank">
        <img src="images/themes-material-ui.png" alt="theme material ui" />
      </a>

      <br />
      <h4>WordPress Admin</h4>
      <br />
      <a href="https://github.com/sweetalert2/sweetalert2-themes/tree/main/wordpress-admin" target="_blank">
        <img src="images/themes-wordpress-admin.png" alt="theme material ui" />
      </a>

      <h3>Themes Installation</h3>
      <p class="code-label">You can install all themes at once:</p>
      <pre data-highlighjs-ignore><code><span class="unselectable">$ </span>npm install @sweetalert2/themes</code></pre>

      <p class="code-label">Or just a single theme <strong>@sweetalert2/theme-&lt;theme_name&gt;</strong>, e.g.:</p>
      <pre
        data-highlighjs-ignore
      ><code><span class="unselectable">$ </span>npm install @sweetalert2/theme-dark</code></pre>

      <p class="code-label">Or from jsdelivr CDN, e.g.:</p>
      <pre><code>&lt;link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet"&gt;
&lt;script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"&gt;&lt;/script&gt;</code></pre>

      <h3>Themes Usage</h3>
      <p class="code-label">With CSS:</p>
      <pre><code>&lt;!-- Include a required theme --&gt;
&lt;link rel="stylesheet" href="@sweetalert2/themes/dark/dark.css"&gt;
&lt;script src="sweetalert2/dist/sweetalert2.min.js"&gt;&lt;/script&gt;</code></pre>

      <p class="code-label">With SASS:</p>
      <pre><code>// your-app.js
import Swal from 'sweetalert2/src/sweetalert2.js'

// your-app.scss
@import '@sweetalert2/themes/dark/dark.scss';</code></pre>
    </div>

    <!-- Sponsors -->
    <h3 id="sponsors">Sponsors</h3>

    <p class="center">
      For all questions related to sponsorship please contact me via email
      <a href="mailto:sweetalert2@gmail.com">sweetalert2@gmail.com</a>
    </p>

    <div class="sponsors" style="margin-top: -1.8em">
      <div>
        <a
          href="https://github.com/sweetalert2/sweetalert2/blob/main/SPONSORS.md#sponsors"
          target="_blank"
          rel="noopener"
          aria-label="Become a sponsor"
        >
          <img src="/images/plus.png" alt="" /><br />Become a sponsor
        </a>
      </div>
    </div>

    <div class="sponsors">
      <div>
        <a href="https://dlxplugins.com/" target="_blank" rel="noopener" aria-label="DLX Plugins">
          <img src="https://avatars.githubusercontent.com/u/106675919?s=200&v=4" alt="DLX Plugins" /><br />DLX Plugins
        </a>
      </div>
      <div>
        <a href="https://github.com/tiagostutz" target="_blank" rel="noopener" aria-label="Tiago de Oliveira Stutz">
          <img
            src="https://avatars0.githubusercontent.com/u/3986989?s=200&v=4"
            alt="Tiago de Oliveira Stutz"
          /><br />Tiago de Oliveira Stutz
        </a>
      </div>
      <div>
        <a href="https://istar.tips/" target="_blank" rel="noopener" aria-label="iStarTips">
          <img src="/images/sponsors/istartips.png" alt="iStarTips" /><br />iStarTips
        </a>
      </div>
      <div>
        <a href="https://refermate.com/" target="_blank" rel="noopener" aria-label="Refermate">
          <img src="/images/sponsors/refermate.png" alt="Refermate" /><br />Refermate
        </a>
      </div>
      <div>
        <a href="https://roboflow.com/" target="_blank" rel="noopener" aria-label="Roboflow">
          <img src="/images/sponsors/roboflow.png" alt="Roboflow" /><br />Roboflow
        </a>
      </div>
      <div>
        <a href="https://www.zezelife.com/" target="_blank" rel="noopener" aria-label="ZezeLife">
          <img src="/images/sponsors/zezelife.png" alt="ZezeLife" /><br />ZezeLife
        </a>
      </div>
      <div>
        <a href="https://www.serpempire.com/" target="_blank" rel="noopener" aria-label="SERP Empire">
          <img src="/images/sponsors/serpempire.png" alt="SERP Empire" /><br />SERP Empire
        </a>
      </div>
      <div>
        <a href="https://realspyapps.com/" target="_blank" rel="noopener" aria-label="Real Spy Apps">
          <img src="/images/sponsors/realspyapps.jpeg" alt="Real Spy Apps" /><br />Real Spy Apps
        </a>
      </div>
      <div>
        <a href="https://www.vegega.com/" target="_blank" rel="noopener" aria-label="Metal Raised Garden Bed">
          <img src="/images/sponsors/vegega.jpeg" alt="Metal Raised Garden Bed" /><br />Metal Raised Garden Bed
        </a>
      </div>
      <div>
        <a href="https://celltrackingapps.com/" target="_blank" rel="noopener" aria-label="Phone Tracking Apps">
          <img src="/images/sponsors/celltrackingapps.png" alt="Phone Tracking Apps" /><br />Phone Tracking Apps
        </a>
      </div>
      <div>
        <a href="https://www.mybitcoinslots.com/" target="_blank" rel="noopener" aria-label="My Bitcoin slots">
          <img src="/images/sponsors/mybitcoinslots.png" alt="My Bitcoin slots" /><br />My Bitcoin slots
        </a>
      </div>
    </div>

    <!-- NSFW Sponsors -->
    <h3 id="nsfw-sponsors">NSFW Sponsors</h3>

    <p class="center">
      For all questions related to sponsorship please contact me via email
      <a href="mailto:sweetalert2@gmail.com">sweetalert2@gmail.com</a>
    </p>

    <div class="sponsors" style="margin-top: -1.8em">
      <div>
        <a
          href="https://github.com/sweetalert2/sweetalert2/blob/main/SPONSORS.md#sponsors"
          target="_blank"
          rel="noopener"
          aria-label="Become a sponsor"
        >
          <img src="/images/plus.png" alt="" /><br />Become a sponsor
        </a>
      </div>
    </div>

    <div class="sponsors">
      <div>
        <a href="https://pinktoys.co.uk/pocket-pussy/" target="_blank" rel="noopener" aria-label="Pocket pussy">
          <img src="/images/sponsors/pinktoys.png" alt="Pocket pussy" /><br />Pocket pussy
        </a>
      </div>
      <div>
        <a
          href="https://www.xspacecup.com/"
          target="_blank"
          rel="noopener"
          aria-label="XspaceCup - Top Male Masturbator Brand"
        >
          <img src="/images/sponsors/xspacecup.png" alt="XspaceCup - Top Male Masturbator Brand" /><br />XspaceCup - Top
          Male Masturbator Brand
        </a>
      </div>
      <div>
        <a href="https://vlixa.com/" target="_blank" rel="noopener" aria-label="Vlixa">
          <img src="/images/sponsors/vlixa.png" alt="Vlixa" /><br />Vlixa
        </a>
      </div>
      <div>
        <a href="https://taboodude.com/" target="_blank" rel="noopener" aria-label="TabooDude">
          <img src="/images/sponsors/taboodude.png" alt="TabooDude" /><br />TabooDude
        </a>
      </div>
      <div>
        <a href="https://sexsitoys.com/lovense-games/" target="_blank" rel="noopener" aria-label="Sexsi Toys">
          <img src="/images/sponsors/sexsitoys.jpg" alt="Sexsi Toys" /><br />Sexsi Toys
        </a>
      </div>
      <div>
        <a href="https://www.cheapestsexdolls.com" target="_blank" rel="noopener" aria-label="CheapestSexDolls">
          <img src="/images/sponsors/cheapestsexdolls.png" alt="CheapestSexDolls" /><br />CheapestSexDolls
        </a>
      </div>
      <div>
        <a
          href="https://www.bestblowjobmachines.com/"
          target="_blank"
          rel="noopener"
          aria-label="Best Blowjob Machines"
        >
          <img src="/images/sponsors/best-blowjob-machines.jpg" alt="Best Blowjob Machines" /><br />Best Blowjob <br />
          Machines
        </a>
      </div>
      <div>
        <a href="https://escortsear.ch/" target="_blank" rel="noopener" aria-label="EscortSearch">
          <img src="/images/sponsors/escortsearch.jpg" alt="EscortSearch" /><br />EscortSearch
        </a>
      </div>
      <div>
        <a href="https://www.nakedoll.com/" target="_blank" rel="noopener" aria-label="NakeDoll">
          <img src="/images/sponsors/nakedoll.png" alt="NakeDoll" /><br />NakeDoll
        </a>
      </div>
      <div>
        <a href="https://readysetcam.com/" target="_blank" rel="noopener" aria-label="Ready Set Cam">
          <img src="/images/sponsors/readysetcam.png" alt="Ready Set Cam" /><br />Ready Set Cam
        </a>
      </div>
      <div>
        <a href="https://www.onahole.com/" target="_blank" rel="noopener" aria-label="hentai sex toys">
          <img src="/images/sponsors/onahole.png" alt="hentai sex toys" /><br />hentai sex toys
        </a>
      </div>
      <div>
        <a
          href="https://blowupdollshop.com/inflatable-sex-doll/"
          target="_blank"
          rel="noopener"
          aria-label="Inflatable sex doll"
        >
          <img src="/images/sponsors/blowupdollshop.png" alt="Inflatable sex doll" /><br />Inflatable sex doll
        </a>
      </div>
      <div>
        <a href="https://sextoystop.com/" target="_blank" rel="noopener" aria-label="Sex Doll Torso">
          <img src="/images/sponsors/sextoystop.png" alt="Sex Doll Torso" /><br />Sex Doll Torso
        </a>
      </div>
      <div>
        <a href="https://sexydollies.com/" target="_blank" rel="noopener" aria-label="porn sexdoll">
          <img src="/images/sponsors/sexydollies.png" alt="porn sexdoll" /><br />porn sexdoll
        </a>
      </div>
      <div>
        <a href="https://bululusexdoll.com/" target="_blank" rel="noopener" aria-label="cheap sex doll">
          <img src="/images/sponsors/bululusexdoll.png" alt="cheap sex doll" /><br />cheap sex doll
        </a>
      </div>
      <div>
        <a href="https://bululu.shop/" target="_blank" rel="noopener" aria-label="BULULU">
          <img src="/images/sponsors/bululu.png" alt="BULULU" /><br />BULULU
        </a>
      </div>
      <div>
        <a href="https://vsdoll.net/" target="_blank" rel="noopener" aria-label="VSDoll">
          <img src="/images/sponsors/vsdoll.png" alt="VSDoll" /><br />VSDoll
        </a>
      </div>
      <div>
        <a href="https://www.xndoll.com/" target="_blank" rel="noopener" aria-label="XNDOLL">
          <img src="/images/sponsors/xndoll.jpeg" alt="XNDOLL" /><br />XNDOLL
        </a>
      </div>
      <div>
        <a href="https://www.sextorso.com/" target="_blank" rel="noopener" aria-label="sexdoll torso">
          <img src="/images/sponsors/sextorso.png" alt="sexdoll torso" /><br />sexdoll torso
        </a>
      </div>
      <div>
        <a href="https://www.minisexdoll.com/anime-sexdoll/" target="_blank" rel="noopener" aria-label="anime sexdoll">
          <img src="/images/sponsors/minisexdoll.png" alt="anime sexdoll" /><br />anime sexdoll
        </a>
      </div>
      <div>
        <a href="https://www.myminisexdoll.com/under-300/" target="_blank" rel="noopener" aria-label="cheap sexdoll">
          <img src="/images/sponsors/myminisexdoll.png" alt="cheap sexdoll" /><br />cheap sexdoll
        </a>
      </div>
      <div>
        <a href="https://www.hugedildo.com/" target="_blank" rel="noopener" aria-label="huge dildo">
          <img src="/images/sponsors/hugedildo.png" alt="huge dildo" /><br />huge dildo
        </a>
      </div>
      <div>
        <a href="https://www.uusexdoll.com/" target="_blank" rel="noopener" aria-label="sexdoll">
          <img src="/images/sponsors/uusexdoll.png" alt="sexdoll" /><br />sexdoll
        </a>
      </div>
      <div>
        <a href="https://cutesexdoll.com/" target="_blank" rel="noopener" aria-label="Cute Sex Doll">
          <img src="/images/sponsors/cutesexdoll.jpg" alt="Cute Sex Doll" /><br />Cute Sex Doll
        </a>
      </div>
      <div>
        <a
          href="https://www.uusextoy.com/best-pocket-pussy/"
          target="_blank"
          rel="noopener"
          aria-label="best pocket pussy"
        >
          <img src="/images/sponsors/uusextoy.png" alt="best pocket pussy" /><br />best pocket pussy
        </a>
      </div>
      <div>
        <a
          href="https://www.lovedolltorso.com/female-torso-sex-doll/"
          target="_blank"
          rel="noopener"
          aria-label="female torso sex doll"
        >
          <img src="/images/sponsors/lovedolltorso.png" alt="female torso sex doll" /><br />female torso sex doll
        </a>
      </div>
      <div>
        <a href="https://www.mymasturbators.com/" target="_blank" rel="noopener" aria-label="male masturbator">
          <img src="/images/sponsors/mymasturbators.png" alt="male masturbator" /><br />male masturbator
        </a>
      </div>
      <div>
        <a href="https://www.buypenispump.com/" target="_blank" rel="noopener" aria-label="penis pump">
          <img src="/images/sponsors/buypenispump.png" alt="penis pump" /><br />penis pump
        </a>
      </div>
      <div>
        <a href="https://www.sexvibrators.in/" target="_blank" rel="noopener" aria-label="Sex Vibrators">
          <img src="/images/sponsors/sexvibrator.png" alt="Sex Vibrators" /><br />Sex Vibrators
        </a>
      </div>
      <div>
        <a href="https://www.viva-awa.com/" target="_blank" rel="noopener" aria-label="Viva Awa">
          <img src="/images/sponsors/viva-awa.png" alt="Viva Awa" /><br />Viva Awa
        </a>
      </div>
      <div>
        <a href="https://www.sensualdolls.com" target="_blank" rel="noopener" aria-label="Sensual Dolls">
          <img src="/images/sponsors/sensualdolls.png" alt="Sensual Dolls" /><br />Sensual Dolls
        </a>
      </div>
      <div>
        <a
          href="https://www.bestrealdoll.com/collections/us-warehouse"
          target="_blank"
          rel="noopener"
          aria-label="BestRealDoll"
        >
          <img src="/images/sponsors/bestrealdoll.jpeg" alt="BestRealDoll" /><br />BestRealDoll
        </a>
      </div>
      <div>
        <a
          href="https://www.sexdolltech.com/product-category/us-warehouse/"
          target="_blank"
          rel="noopener"
          aria-label="SexDollTech"
        >
          <img src="/images/sponsors/sexdolltech.jpeg" alt="SexDollTech" /><br />SexDollTech
        </a>
      </div>
      <div>
        <a href="https://www.sexdollsoff.com/" target="_blank" rel="noopener" aria-label="SexDollsOff">
          <img src="/images/sponsors/sexdollsoff.png" alt="YourDoll" /><br />SexDollsOff
        </a>
      </div>
      <div>
        <a href="https://realsexdoll.com/" target="_blank" rel="noopener" aria-label="RealSexDoll">
          <img src="/images/sponsors/realsexdoll.png" alt="YourDoll" /><br />RealSexDoll
        </a>
      </div>
      <div>
        <a href="https://www.yourdoll.com/" target="_blank" rel="noopener" aria-label="YourDoll">
          <img src="/images/sponsors/yourdoll.jpg" alt="YourDoll" /><br />YourDoll
        </a>
      </div>
      <div>
        <a href="https://anniesdollhouse.com/" target="_blank" rel="noopener" aria-label="Annie's Dollhouse">
          <img src="/images/sponsors/annies-dollhouse.png" alt="Annie's Dollhouse" /><br />Annie's Dollhouse
        </a>
      </div>
      <div>
        <a href="https://www.mysextoyguide.com/" target="_blank" rel="noopener" aria-label="My Sex Toy Guide">
          <img src="/images/sponsors/my-sex-toy-guide.jpg" alt="My Sex Toy Guide" /><br />My Sex Toy Guide
        </a>
      </div>
      <div>
        <a href="https://sextoycollective.com/" target="_blank" rel="noopener" aria-label="STC">
          <img src="/images/sponsors/sextoycollective.jpg" alt="STC" /><br />STC
        </a>
      </div>
      <div>
        <a
          href="https://doctorclimax.com/"
          target="_blank"
          rel="noopener"
          aria-label="DoctorClimax"
          title="DoctorClimax"
        >
          <img src="/images/sponsors/doctorclimax.png" alt="DoctorClimax" /><br />DoctorClimax
        </a>
      </div>
      <div>
        <a href="https://www.bsdoll.com/" target="_blank" rel="noopener" aria-label="BSDoll">
          <img src="/images/sponsors/bsdoll.jpg" alt="BSDoll" /><br />BSDoll
        </a>
      </div>
    </div>

    <div id="rtl-container" dir="rtl"></div>
    <form id="codepen-form" action="https://codepen.io/pen/define" method="POST" target="_blank">
      <input type="hidden" name="data" id="codepen-data" />
    </form>
    <script src="/dist/bundle.js" defer></script>
  </body>
</html>
